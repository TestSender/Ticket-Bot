const { ApplicationCommandOptionType, ActionRowBuilder, ButtonBuilder, EmbedBuilder } = require('discord.js');

player.on('error', (queue, error) => {
    console.log(`Error emitted from the queue ${error.message}`);
});

player.on('connectionError', (queue, error) => {
    console.log(`Error emitted from the connection ${error.message}`);
});

player.on('trackStart', (queue, track) => {
    if (!client.config.opt.loopMessage && queue.repeatMode !== 0) return;
    const embed = new EmbedBuilder()
    .setAuthor({name: `–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è ${track.title} –≤ ${queue.connection.channel.name} üéß`, iconURL: track.requestedBy.avatarURL()})
    .setColor('#13f857')

    const back = new ButtonBuilder()
    .setLabel('–ü—Ä–µ–¥—ã–¥—É—â–∏–π')
    .setCustomId(JSON.stringify({ffb: 'back'}))
    .setStyle('Primary')

    const skip = new ButtonBuilder()
    .setLabel('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–µ–∫')
    .setCustomId(JSON.stringify({ffb: 'skip'}))
    .setStyle('Primary')

    const resumepause = new ButtonBuilder()
    .setLabel('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ & –ü–∞—É–∑–∞')
    .setCustomId(JSON.stringify({ffb: 'resume&pause'}))
    .setStyle('Danger')

    const loop = new ButtonBuilder()
    .setLabel('–ü–æ–≤—Ç–æ—Ä')
    .setCustomId(JSON.stringify({ffb: 'loop'}))
    .setStyle('Secondary')
    
    const queuebutton = new ButtonBuilder()
    .setLabel('–û—á–µ—Ä–µ–¥—å')
    .setCustomId(JSON.stringify({ffb: 'queue'}))
    .setStyle('Secondary')

    const row1 = new ActionRowBuilder().addComponents(back, loop, resumepause, queuebutton, skip)
    queue.metadata.send({ embeds: [embed], components: [row1] })
});

player.on('trackAdd', (queue, track) => {
   
    queue.metadata.send(`–¢—Ä–µ–∫ ${track.title} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å ‚úÖ`);
});

player.on('botDisconnect', (queue) => {
    queue.metadata.send('–ú–µ–Ω—è –≤—Ä—É—á–Ω—É—é –æ—Ç–∫–ª—é—á–∏–ª–∏ –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞, –æ—á–∏—â–∞—é –æ—á–µ—Ä–µ–¥—å... ‚ùå');
});

player.on('channelEmpty', (queue) => {
    queue.metadata.send('–í –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç, –≤—ã—Ö–æ–¥ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞... ‚ùå');
});

player.on('queueEnd', (queue) => {
    queue.metadata.send('–Ø –∑–∞–∫–æ–Ω—á–∏–ª —á–∏—Ç–∞—Ç—å –≤—Å—é –æ—á–µ—Ä–µ–¥—å ‚úÖ');
});

player.on('tracksAdd', (queue, tracks) => {
    queue.metadata.send(`–í—Å–µ –ø–µ—Å–Ω–∏ –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å ‚úÖ`);
});