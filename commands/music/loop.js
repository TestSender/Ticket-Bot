const { QueueRepeatMode } = require('discord-player');
const { ApplicationCommandOptionType } = require('discord.js');

module.exports = {
    name: 'loop',
    description: '–≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ –ø–µ—Å–µ–Ω –∏–ª–∏ –≤—Å–µ–π –æ—á–µ—Ä–µ–¥–∏',
    voiceChannel: true,
    options: [
        {
        name: 'action' ,
        description: '–∫–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤ —Ü–∏–∫–ª–µ',
        type: ApplicationCommandOptionType.String,
        required: true,
        choices: [
            { name: '–û—á–µ—Ä–µ–¥—å', value: 'enable_loop_queue' },
            { name: '–û—Ç–∫–ª—é—á–∏—Ç—å', value: 'disable_loop'},
            { name: '–¢—Ä–µ–∫', value: 'enable_loop_song' },
        ],
    }
    ],
    execute({ inter }) {
        const queue = player.getQueue(inter.guildId);

         if (!queue || !queue.playing) return inter.reply({ content: `–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—É–∑—ã–∫–∞ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è ${inter.member}... –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É ? ‚ùå`, ephemeral: true });
        switch (inter.options._hoistedOptions.map(x => x.value).toString()) {
            case 'enable_loop_queue': {
                if (queue.repeatMode === 1) return inter.reply({ content:`–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –º—É–∑—ã–∫—É –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ç–ª–∏ (/loop Disable) ${inter.member}... –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É ? ‚ùå`, ephemeral: true });

                const success = queue.setRepeatMode( QueueRepeatMode.QUEUE);

                return inter.reply({ content:success ? `–†–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–∞ **–≤–∫–ª—é—á–µ–Ω**, –≤—Å—è –æ—á–µ—Ä–µ–¥—å –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ üîÅ` : `–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ${inter.member}... –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É ? ‚ùå` });
                break
            }
            case 'disable_loop': {
                const success = queue.setRepeatMode(QueueRepeatMode.OFF);

                return inter.reply({ content:success ? `–†–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–∞ **–æ—Ç–∫–ª—é—á–µ–Ω**` : `–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ${inter.member}... –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É ? ‚ùå` });
                break
            }
            case 'enable_loop_song': {
                if (queue.repeatMode === 2) return inter.reply({ content:`–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –º—É–∑—ã–∫—É –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ç–ª–∏ (/loop Disable) ${inter.member}... –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É ? ‚ùå`, ephemeral: true });

                const success = queue.setRepeatMode( QueueRepeatMode.TRACK);
                
                return inter.reply({ content:success ? `–†–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–∞ **–≤–∫–ª—é—á–µ–Ω**, —Ç–µ–∫—É—â–∞—è –ø–µ—Å–Ω—è –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ (–≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ü–∏–∫–ª —Å –ø–æ–º–æ—â—å—é /loop disabled)` : `–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ${inter.member}... –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É ? ‚ùå` });
                break
            }
        }
       
    },
};